[tool.mypy]
allow_redefinition = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
pretty = true
show_error_codes = true
show_error_context = true
show_traceback = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
exclude = "^build/|^docs/|^test/|^examples/"

[tool.doc8]
max-line-length = 1000

[tool.black]
line-length = 100
target-version = ['py39']

[tool.flake8]
# copy from https://github.com/psf/black/blob/main/.flake8
# this is a simplified version of config, making vscode plugin happy
max-line-length = 100
max-complexity = 18
select = ["E", "F", "W", "B", "C4", "ASYNC", "PIE"]
ignore = ["E402", "E501", "E701", "E731", "E741", "B008", "B011", "B028", "C408"]

[tool.ruff]
# To customise ruff rules for your project, use the "extend", "extend-select" and "extend-ignore"
# keys in your project configuration. This can let you inherit most of this configuration.
select = [
    "E", "F", "W", "B", "C4", "ASYNC", "PIE",
    # grab bag of random things
    "DTZ003", "DTZ004",
    "G010",
    "PLE1205", "PLE1206", "PLE1310", "PLW0120", "PLW0129",
    "SIM101", "SIM110", "SIM201", "SIM202", "SIM222", "SIM223",
    "S506",
    "RET501", "RET502",  # RET503 is also nice, but there's currently some noise
    "RUF006", "RUF008", "RUF011", "RUF013", "RUF200",
    "COM819",
]
ignore = [
    "E402",   # a people usually know what they're doing
    "E501",   # line too long. black does a good enough job
    "E701",   # multiple statements on one line. black does a good enough job
    "E731",   # lambda expression assignments. these are nice sometimes
    "E741",   # variable names like "l". this isn't a huge problem
    "B008",   # do not perform function calls in argument defaults. we do this sometimes
    "B011",   # assert false. we don't use python -O
    "B028",   # we don't need explicit stacklevel for warnings
    "C408",   # we often use dict with keyword args
]
unfixable = [
    "F841",  # unused variable. ruff keeps the call, but mostly we want to get rid of it all
    "F601",  # automatic fix might obscure issue
    "F602",  # automatic fix might obscure issue
    "B018",  # automatic fix might obscure issue
    "SIM222",  # automatic fix might obscure issue
    "SIM223",  # automatic fix might obscure issue
]

target-version = "py39"
